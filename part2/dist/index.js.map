{"version":3,"sources":["../src/index.js"],"names":["http","fs","qs","contacts","createServer","req","res","console","log","method","url","write","end","body","on","chunk","parse","obj","contact","err","statusCode","load","then","addContact","save","name","catch","JSON","stringify","list","readFile","data","listen"],"mappings":";;AAAA;;IAAYA,I;;AACZ;;IAAYC,E;;AAGZ;;IAAYC,E;;AAEZ;;;;AAJA;AACA;AAKA,IAAIC,WAAW,6BAAgB,qBAAhB,CAAf;;AAEAH,KACCI,YADD,CACc,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC3B;AACAC,SAAQC,GAAR,CAAYH,IAAII,MAAhB,EAAwBJ,IAAIK,GAA5B;;AAEA,KAAGL,IAAIK,GAAJ,KAAY,GAAf,EAAmB;AAClBJ,MAAIK,KAAJ,CAAU,8BAAV;AACA,SAAOL,IAAIM,GAAJ,EAAP;AACA;;AAED,KAAGP,IAAIK,GAAJ,KAAY,cAAZ,IAA8BL,IAAII,MAAJ,KAAe,MAAhD,EAAuD;AACtD,MAAII,OAAO,EAAX;AACAR,MAAIS,EAAJ,CAAO,MAAP,EAAe,iBAAS;AACjBD,WAAQE,KAAR;AACH,GAFJ;;AAIGV,MAAIS,EAAJ,CAAO,KAAP,EAAc,YAAM;AACnBP,WAAQC,GAAR,CAAY,kBAAZ,EAAgCN,GAAGc,KAAH,CAASH,IAAT,CAAhC;AACA,OAAMI,MAAMf,GAAGc,KAAH,CAASH,IAAT,CAAZ;;AAEA,OAAIK,gBAAJ;AACA,OAAG;AACLA,cAAU,yBAAYD,GAAZ,CAAV;AACG,IAFD,CAGA,OAAME,GAAN,EAAU;AACTZ,YAAQC,GAAR,CAAYW,GAAZ;AACAb,QAAIc,UAAJ,GAAiB,GAAjB;AACAd,QAAIK,KAAJ,CAAUQ,GAAV;AACA,WAAOb,IAAIM,GAAJ,EAAP;AACA;;AAEJ,UAAOT,SAASkB,IAAT,GACNC,IADM,CACD,YAAM;AACXnB,aAASoB,UAAT,CAAoBL,OAApB;AACAf,aAASqB,IAAT;AACA,IAJM,EAKNF,IALM,CAKD,YAAM;AACXhB,QAAIK,KAAJ,kCAA0CO,QAAQO,IAAlD;AACAnB,QAAIM,GAAJ;AACA,IARM,EASNc,KATM,CASA,UAACP,GAAD,EAAS;AACfZ,YAAQC,GAAR,CAAY,uBAAZ,EAAqCW,GAArC;AACAb,QAAIc,UAAJ,GAAiB,GAAjB;AACAd,QAAIK,KAAJ,CAAU,uBAAV;AACAL,QAAIM,GAAJ;AACA,IAdM,CAAP;AAeG,GA9BD;AA+BH,EArCD,MAsCK,IAAGP,IAAIK,GAAJ,KAAY,eAAf,EAA+B;AACnC,SAAOP,SAASkB,IAAT,GACNC,IADM,CACD,YAAK;AACVf,WAAQC,GAAR,CAAYL,QAAZ;AACA;;AAEAG,OAAIK,KAAJ,CAAUgB,KAAKC,SAAL,CAAezB,SAAS0B,IAAxB,CAAV;;AAEAvB,OAAIM,GAAJ;AACA,GARM,EASNc,KATM,CASA,eAAO;AACbnB,WAAQC,GAAR,CAAYW,GAAZ;AACAb,OAAIc,UAAJ,GAAiB,GAAjB;AACAd,OAAIK,KAAJ,CAAU,uBAAV;AACAL,OAAIM,GAAJ;AACA,GAdM,CAAP;AAeA,EAhBI;AAkBL;AACCX,KAAG6B,QAAH,cAAwBzB,IAAIK,GAA5B,EAAoC,MAApC,EAA4C,UAACS,GAAD,EAAMY,IAAN,EAAe;AAC1D,OAAGZ,GAAH,EAAO;AACNZ,YAAQC,GAAR,CAAY,qBAAZ,EAAmCW,GAAnC;AACAb,QAAIc,UAAJ,GAAiB,GAAjB;AACAd,QAAIK,KAAJ,CAAU,iBAAV;AACA,WAAOL,IAAIM,GAAJ,EAAP;AACA;AACD;AACAN,OAAIK,KAAJ,CAAUoB,IAAV;AACAzB,OAAIM,GAAJ;AACA,GAVD;AAWD,CA9ED,EA+ECoB,MA/ED,CA+EQ,IA/ER","file":"index.js","sourcesContent":["import * as http from \"http\";\r\nimport * as fs from \"fs\";\r\n// querystring is used to parse url parameters to an object\r\n// also a core module\r\nimport * as qs from \"querystring\";\r\n\r\nimport { Contact, ContactList } from\"./ContactList.js\";\r\n\r\nlet contacts = new ContactList(\"./src/contacts.json\");\r\n\r\nhttp\r\n.createServer((req, res) => {\r\n\t// log the incoming request\r\n\tconsole.log(req.method, req.url);\r\n\r\n\tif(req.url === '/'){\r\n\t\tres.write(\"This is the webserver index.\")\r\n\t\treturn res.end();\r\n\t}\r\n\r\n\tif(req.url === '/add-contact' && req.method === 'POST'){\r\n\t\tlet body = \"\";\r\n\t\treq.on(\"data\", chunk => {\r\n\t        body += chunk;\r\n\t    });\r\n\r\n\t    req.on(\"end\", () => {\r\n\t    \tconsole.log(\"Received params:\", qs.parse(body));\r\n\t    \tconst obj = qs.parse(body);\r\n\r\n\t    \tlet contact;\r\n\t    \ttry{\r\n\t\t\t\tcontact = new Contact(obj);\r\n\t    \t}\r\n\t    \tcatch(err){\r\n\t    \t\tconsole.log(err);\r\n\t    \t\tres.statusCode = 401;\r\n\t    \t\tres.write(err);\r\n\t    \t\treturn res.end();\r\n\t    \t}\r\n\r\n\t\t\treturn contacts.load()\r\n\t\t\t.then(() => {\r\n\t\t\t\tcontacts.addContact(contact);\r\n\t\t\t\tcontacts.save();\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tres.write(`Successfully saved contact: ${ contact.name }`);\r\n\t\t\t\tres.end();\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(\"Error saving contact:\", err);\r\n\t\t\t\tres.statusCode = 500;\r\n\t\t\t\tres.write(\"Error saving contact.\");\r\n\t\t\t\tres.end();\r\n\t\t\t})\r\n\t    });\r\n\t} \r\n\telse if(req.url === '/all-contacts'){\r\n\t\treturn contacts.load()\r\n\t\t.then(()=> {\r\n\t\t\tconsole.log(contacts);\r\n\t\t\t// console.log(contacts[\"list\"]);\r\n\r\n\t\t\tres.write(JSON.stringify(contacts.list));\r\n\t\t\t\r\n\t\t\tres.end();\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tconsole.log(err);\r\n\t\t\tres.statusCode = 500;\r\n\t\t\tres.write(\"Internal server error\");\r\n\t\t\tres.end();\r\n\t\t});\r\n\t}\r\n\telse\r\n\t// if none the urls above match, search for file in public folder\r\n\t\tfs.readFile(`./public${ req.url }`, \"utf8\", (err, data) => {\r\n\t\t\tif(err){\r\n\t\t\t\tconsole.log(\"Error reading file:\", err);\r\n\t\t\t\tres.statusCode = 404;\r\n\t\t\t\tres.write(\"File not found.\");\r\n\t\t\t\treturn res.end();\r\n\t\t\t}\r\n\t\t\t// console.log(\"Data:\", data);\r\n\t\t\tres.write(data);\r\n\t\t\tres.end();\r\n\t\t});\r\n})\r\n.listen(8080);"]}